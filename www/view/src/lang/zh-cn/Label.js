import Term from 'APPSRC/lang/zh-cn/Term'
// import Time from 'APPSRC/lang/zh-cn/Time'
import Phrase from 'APPSRC/lang/zh-cn/Phrase'

const phraseSeperator = ''

const data = {
  ...Phrase,
  ...Term,

  update_S_: '修改{s}',
  retryAfter_N_seconds: '{n} 秒后重试',
  userAvatar: [Phrase.user, Phrase.avatar].join(phraseSeperator),
  userName: [Phrase.user, Phrase.name].join(phraseSeperator),
  getEmailCode: ['获取', Phrase.emailCode].join(phraseSeperator),
  getPhoneCode: ['获取', Phrase.phoneCode].join(phraseSeperator),
  mostSeen: '常见',
  loginCredential: [Phrase.login, Phrase.credential].join(phraseSeperator),
  CodeFeverPassword: [Phrase.CodeFever, Phrase.password].join(phraseSeperator),
  wechatBind: [Phrase.wechat, Phrase.bind].join(phraseSeperator),
  unbind_P: '解除{p}绑定',

  repositoryID: [Term.repository, Phrase.ID].join(phraseSeperator),
  repositoryName: [Term.repository, Phrase.name].join(phraseSeperator),
  repositoryDescription: [Term.repository, Phrase.description].join(phraseSeperator),
  repositoryURL: [Term.repository, Phrase.url].join(phraseSeperator),
  repositorySlug: [Term.repository, Phrase.slug].join(phraseSeperator),
  repositoryMember: [Term.repository, Term.member].join(phraseSeperator),
  newRepository: [Phrase.new, Term.repository].join(phraseSeperator),
  forkRepository: [Term.fork, Term.repository].join(phraseSeperator),
  unknownRepository: [Phrase.unknown, Term.repository].join(phraseSeperator),
  allRepository: [Phrase.all, Term.repository].join(phraseSeperator),
  deleteRepository: [Phrase.delete, Term.repository].join(phraseSeperator),

  groupID: [Term.group, Phrase.ID].join(phraseSeperator),
  groupName: [Term.group, Phrase.name].join(phraseSeperator),
  groupDescription: [Term.group, Phrase.description].join(phraseSeperator),
  groupURL: [Term.group, Phrase.url].join(phraseSeperator),
  groupSlug: [Term.repository, Phrase.slug].join(phraseSeperator),
  groupMember: [Term.group, Term.member].join(phraseSeperator),
  newGroup: [Phrase.new, Term.group].join(phraseSeperator),
  unknownGroup: [Phrase.unknown, Term.group].join(phraseSeperator),
  deleteGroup: [Phrase.delete, Term.group].join(phraseSeperator),

  inviteMember: [Phrase.invite, Term.member].join(phraseSeperator),
  removeMember: [Phrase.remove, Term.member].join(phraseSeperator),

  forkFrom_S: [Term.fork, '自: {s}'].join(phraseSeperator),
  updateFrom_S1_To_S2: ['从 {s1} 更新为 {s2}'].join(phraseSeperator),

  repositoryAvatar: [Term.repository, Phrase.icon].join(phraseSeperator),
  groupAvatar: [Term.group, Phrase.icon].join(phraseSeperator),
  basicInfo: '基本信息',
  newPasswordConfirm: [Phrase.confirm, Phrase.newPassword].join(phraseSeperator),
  security: '安全性',
  setupNewMFADevice: '设置 MFA 设备',
  changeMFADevice: '更换 MFA 设备',
  removeMFADevice: '移除 MFA 设备',
  mfaCode1: ['第一组 ', Phrase.mfaCode].join(phraseSeperator),
  mfaCode2: ['第二组 ', Phrase.mfaCode].join(phraseSeperator),
  commitTime: [Phrase.commit, Phrase.time].join(phraseSeperator),
  copyPath: [Phrase.copy, Phrase.path].join(phraseSeperator),
  copyHash: [Phrase.copy, Term.hash].join(phraseSeperator),
  copyCode: [Phrase.copy, Term.code].join(phraseSeperator),
  lastCommit: [Phrase.last, Term.commit].join(phraseSeperator),
  lastUpdate: [Phrase.last, Phrase.update].join(phraseSeperator),

  updateCreator: [Phrase.update, Phrase.creator].join(phraseSeperator),
  updateRepositoryURL: [Phrase.update, Term.repository, Phrase.url].join(phraseSeperator),
  updateGroupURL: [Phrase.update, Term.group, Phrase.url].join(phraseSeperator),

  webhookSetting: [Term.webhook, Term.setting].join(phraseSeperator),
  createWebhook: [Phrase.create, Term.webhook].join(phraseSeperator),
  updateWebhook: [Phrase.update, Term.webhook].join(phraseSeperator),
  deleteWebhook: [Phrase.delete, Term.webhook].join(phraseSeperator),
  contentType: '数据格式',
  webhookSecret: '校验秘钥',
  webhookTrigger: '触发事件',
  pushTrigger: '仅推送事件',
  customeTrigger: '自定义',
  webhookList: 'Webhook列表',
  webhookLog: [Phrase.webhook, Phrase.log].join(phraseSeperator),

  createOrigin: [Phrase.create, Phrase.origin].join(phraseSeperator),
  choseCreateOrigin: [Phrase.chose, Phrase.create, Phrase.origin].join(phraseSeperator),
  tagDescription: [Term.tag, Phrase.description].join(phraseSeperator),
  tagName: [Term.tag, Phrase.name].join(phraseSeperator),
  branchName: [Term.branch, Phrase.name].join(phraseSeperator),
  defaultBranch: [Phrase.default, Term.branch].join(phraseSeperator),
  protectedBranch: [Phrase.protected, Term.branch].join(phraseSeperator),
  branchRule: [Phrase.branch, Phrase.rule].join(phraseSeperator),
  allowPush: [Phrase.allow, Phrase.push].join(phraseSeperator),
  allowMerge: [Phrase.allow, Phrase.merge].join(phraseSeperator),
  noData: ['没有', Term.data].join(phraseSeperator),
  newBranch: [Phrase.new, Term.branch].join(phraseSeperator),
  newTag: [Phrase.new, Term.tag].join(phraseSeperator),
  deleteBranch: [Phrase.delete, Term.branch].join(phraseSeperator),
  deleteTag: [Phrase.delete, Term.tag].join(phraseSeperator),
  updateTime: [Phrase.update, Term.time].join(phraseSeperator),
  updatedIn: '更新于',
  editIn: '编辑于',
  expandFullFile: [Phrase.expand, Phrase.full, Phrase.file].join(phraseSeperator),
  showDiffOnly: '仅展示修改行',
  codeDiff: '代码差异',
  requestCreated: '创建于',
  requestClosed: '关闭于',
  requestMerged: '合并于',
  createRepository: ['请', Phrase.create, Term.repository].join(phraseSeperator),

  commitActivity: [Term.commit, Phrase.activity].join(phraseSeperator),
  mergeRequestActivity: [Term.mergeRequest, Phrase.activity].join(phraseSeperator),
  memberActivity: [Term.member, Phrase.activity].join(phraseSeperator),

  addSSHKey: [Phrase.add, Term.SSHKey].join(phraseSeperator),
  emailManage: ['邮箱', Phrase.manage].join(phraseSeperator),
  memberManage: [Term.member, Phrase.manage].join(phraseSeperator),
  primaryEmail: '主邮箱',
  contactEmail: '关联邮箱列表',
  SSHKeyManage: [Term.SSHKey_pl, ' ', Phrase.manage].join(phraseSeperator),
  notificationCenter: '通知中心',
  notificationReceiveStatus: '接收通知状态',
  unread: '未读',

  fileModification: [Term.file, Phrase.modification].join(phraseSeperator),
  fileModificationList: [Phrase.modification, Term.file, Phrase.list].join(phraseSeperator),
  lineAdd: [Term.line, Phrase.add].join(phraseSeperator),
  lineDelete: [Term.line, Phrase.delete].join(phraseSeperator),
  browserFile: [Phrase.browser, Phrase.file].join(phraseSeperator),
  browserUnchangedFIle: [Phrase.browser, Phrase.modification, Phrase.before, Phrase.file].join(phraseSeperator),
  commitHash: [Term.commit, Term.hash].join(phraseSeperator),
  allFiles: [Phrase.all, Phrase.file].join(phraseSeperator),
  openFileTree: [Phrase.open, Term.fileTree].join(phraseSeperator),
  closeFileTree: [Phrase.close, Term.fileTree].join(phraseSeperator),

  requestMerge: [Phrase.request, Phrase.merge].join(phraseSeperator),
  createMergeRequest: [Phrase.create, Term.mergeRequest].join(phraseSeperator),
  closeMergeRequest: [Phrase.close, Term.mergeRequest].join(phraseSeperator),

  more: '查看更多',
  noMore: '没有更多',
  processing: '处理中',

  IJoined: '我参与的',
  ICreated: '我创建的',

  dangerOperation: '危险操作',
  dangerOperationConfirm: '最后确认危险操作',
  compareBranch: '对比分支并继续',
  lastModified: '最近修改',
  lastModified_N: ['第', '{n}', '次修改'].join(phraseSeperator),

  openMergeRequest: [Phrase.open, Term.mergeRequest].join(phraseSeperator),
  modificationBranch: [Phrase.modification, Term.branch].join(phraseSeperator),
  sourceBranch: [Phrase.source, Term.branch].join(phraseSeperator),
  targetBranch: [Phrase.target, Term.branch].join(phraseSeperator),
  repositoryAdvancedSetting: '仓库高级设置',
  branchSetting: '分支设置',
  groupAdvancedSetting: '仓库组高级设置',
  memberLimitation: [Term.member, Term.limitation].join(phraseSeperator),
  modificationLimitation: [Phrase.modification, Term.limitation].join(phraseSeperator),
  roleID_1: Term.guest,
  roleID_2: Term.reporter,
  roleID_3: Term.developer,
  roleID_4: Term.maintianer,
  roleID_5: Term.owner,
  yourself: '你自己',

  enabledMFA: '开启了2FA',
  disabledMFA: '未开启2FA',
  blocked: '禁用',
  createTime: '创建时间',
  addUser: '添加用户',

  statistic: '统计',
  systemResources: '系统资源',
  diskUsgae: '磁盘使用量',
  serviceStatus: '服务状态',

  host: '主机',
  senderName: '发件人名称',
  senderAddress: '发件人地址',
  register: '注册',
  allowRegister: '开放注册',
  urlPrefix: [Phrase.url, ' ', Phrase.prefix].join(phraseSeperator),
  sshPrefix: [Phrase.ssh, ' ', Phrase.prefix].join(phraseSeperator),

  support: '技术支持',
  feedback: '提交反馈',
  contribute: '为 CodeFever Community 贡献代码',
  about: '关于 CodeFever Community',

  pushEvent: '推送事件',
  changeMemberRole: [Phrase.modification, Term.member, Term.role].join(phraseSeperator),
  createProtectedBranchRule: '创建受保护分支规则',
  changeProtectedBranchRule: '修改受保护分支规则',
  removeProtectedBranchRule: '删除受保护分支规则',
  reviewReviewer: '评审代码',

  _N_repository: '{n} {n, plural, =0 {' + Term.repository + '}\n=1 {' + Term.repository + '}\nother {' + Term.repository_pl + '}}',
  _N_commit: '{n} {n, plural, =0 {' + Term.commit + '}\n=1 {' + Term.commit + '}\nother {' + Term.commit_pl + '}}',
  _N_branch: '{n} {n, plural, =0 {' + Term.branch + '}\n=1 {' + Term.branch + '}\nother {' + Term.branch_pl + '}}',
  _N_tag: '{n} {n, plural, =0 {' + Term.tag + '}\n=1 {' + Term.tag + '}\nother {' + Term.tag_pl + '}}',
  _N_byte: '{n} {n, plural, =0 {Byte}\n=1 {Byte}\nother {Bytes}}',
  _N_mergeRequest: '{n} {n, plural, =0 {' + Term.mergeRequest + '}\n=1 {' + Term.mergeRequest + '}\nother {' + Term.mergeRequest_pl + '}}',
  _N_member: '{n} {n, plural, =0 {' + Term.member + '}\n=1 {' + Term.member + '}\nother {' + Term.member_pl + '}}'
}

export default { ...data, __namespace__: 'label' }
